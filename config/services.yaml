imports:
    - { resource: './services/*.yaml' }

parameters:
    env(DEFAULT_HOST): localhost
    env(DEFAULT_SCHEME): https
    env(DEFAULT_PATH): ''
    router.request_context.host: '%env(DEFAULT_HOST)%'
    router.request_context.scheme: '%env(DEFAULT_SCHEME)%'
    router.request_context.base_url: '%env(DEFAULT_PATH)%'

    json_manifest_path: '%kernel.project_dir%/public/build/manifest.json'

    notification_channel_policy:
        urgent: ['chat/slack', email]
        high: ['chat/slack', email]
        medium: ['chat/slack']
        low: ['chat/slack']
    notification_mail_from: no-reply@heimdall.dev
    notification_recipients:
        -   phone: null
            email: contact@heimdall.dev

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $notificationRecipients: '%notification_recipients%'

    _instanceof:
        App\Checker\Checker:
            tags: [ 'heimdall.checker' ]

        Doctrine\Common\EventSubscriber:
            tags: [ 'doctrine.event_subscriber' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Model,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Checker\CheckerCollection:
        arguments:
            $checkers: !tagged heimdall.checker

    App\Asset\DevEntrypointLookup:
        decorates: 'webpack_encore.entrypoint_lookup[_default]'

    Symfony\Component\Lock\StoreInterface:
        class: Symfony\Component\Lock\Store\PdoStore
        arguments:
            $connOrDsn: '@doctrine.dbal.default_connection'

    Symfony\Component\Lock\Factory: ~

    App\Serializer\CheckerNameNormalizer:
        decorates: api_platform.jsonld.normalizer.item
        arguments:
            $decorated: '@App\Serializer\CheckerNameNormalizer.inner'
